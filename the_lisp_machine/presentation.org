#+TITLE: Emacs
# Global settings
#+REVEAL_THEME: black
#+REVEAL_TRANS: convex
#+REVEAL_EXTRA_OPTIONS: width:1920, height:1200, margin:0.1, controls:true, slide_number:false, center:true
#+REVEAL_EXTRA_CSS: ./presentation.css
#+OPTIONS: num:nil toc:nil reveal_global_footer:nil
#+REVEAL_SLIDE_FOOTER:

# Title page
#+Subtitle: The Lisp Machine
#+REVEAL_TITLE_SLIDE: <h1>%t</h1><h3>%s</h3>
#+REVEAL_TITLE_SLIDE_BACKGROUND: ./images/lambda.jpg

* Philosophy
** Free software

#+BEGIN_NOTES
The idea of free software is that the user should have the freedom to:
#+END_NOTES

#+ATTR_REVEAL: :frag (roll-in)
- Run the program as you wish
- Study the program and change it
- Redistribute copies to help others
- Distribute copies of modified versions

** Empowering users

#+BEGIN_NOTES
The goal is to empower users. If that is your goal then there are some design
choices that will be made based on that ideal:
- accessing the source code must be easy
- reading documentation must be easy
- changing code, even core, must be easy
#+END_NOTES

* Lisp Machine

#+BEGIN_NOTES
I think the best way to describe Emacs is a Lisp Machine. Historically that
might not be entirely accurate, because lisp machines of the 80s were really
high tech completely hackable computers. But Emacs comes pretty close.

In a way I think a machine is suitable, like a virtual machine. But this one is
built on lisp and it's a programmable and modifiable computing environment.
#+END_NOTES

** Lisp, the language

#+BEGIN_NOTES
Lisp is a functional programming language. Known for it's little syntax and high
density of parentheses.

In Emacs the dialect is Emacs Lisp. There are many Lisps out there like common
lisp, scheme, clojure.
#+END_NOTES

#+BEGIN_NOTES
This is an example of a lisp expression. It takes a function, + and applies it
to a sequence of data to calculate the sum of the list.
#+END_NOTES

#+BEGIN_SRC elisp
(seq-reduce #'+ (number-sequence 1 100) 0)
#+END_SRC

* The implementations

#+BEGIN_NOTES
Emacs has enabled the users to create:
powerful, lean, interface to most of the things that we use.
Examples:
- man
- proced
- dired
- magit
- org-mode
#+END_NOTES

